{"version":3,"file":"static/js/172.db55e15a.chunk.js","mappings":"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","sources":["components/auth/validation.js","components/pages/Login.jsx","components/phoneBook/contactForm/contactForm.styled.js"],"sourcesContent":["import * as yup from 'yup';\n\nexport const getRegisterSchema = () => {\n  return yup.object().shape({\n    name: yup\n      .string()\n      .matches(/^[a-zA-Zа-яА-Я\\s'-]*$/, 'Name should not contain numbers')\n      .required(),\n    email: yup.string().email('Invalid email format').required(),\n    password: yup\n      .string()\n      .min(6, 'Password must be at least 6 characters')\n      .required(),\n  });\n};\n\nexport const getLoginSchema = () => {\n  return yup.object().shape({\n    email: yup.string().email('Invalid email format').required(),\n    password: yup\n      .string()\n      .min(6, 'Password must be at least 6 characters')\n      .required(),\n  });\n};\n","import { getLoginSchema } from 'components/auth/validation';\n\nimport {\n  ContactForm,\n  FieldForm,\n  LabelForm,\n  Main,\n  Buttons,\n  Error,\n} from 'components/phoneBook/contactForm/contactForm.styled';\n\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\n\nconst Login = () => {\n  const dispacth = useDispatch();\n  const loginSchema = getLoginSchema();\n\n  const handleSibmit = (values, { resetForm }) => {\n    const { email, password } = values;\n    console.log(values);\n\n    toast.success(`${email}${password} success`);\n    resetForm();\n    dispacth();\n  };\n\n  return (\n    <>\n      <h1>Login pages</h1>\n      <Main\n        initialValues={{ email: '', password: '' }}\n        validationSchema={loginSchema}\n        onSubmit={handleSibmit}\n      >\n        <ContactForm>\n          <LabelForm htmlFor=\"email\">\n            Email\n            <FieldForm name=\"email\" required />\n            <Error name=\"email\" component=\"p\" />\n          </LabelForm>\n\n          <LabelForm htmlFor=\"password\">\n            Password\n            <FieldForm name=\"password\" required />\n            <Error name=\"password\" component=\"p\" />\n          </LabelForm>\n\n          <Buttons type=\"submit\">Login</Buttons>\n          <Toaster />\n        </ContactForm>\n      </Main>\n    </>\n  );\n};\n\nexport default Login;\n","import styled from 'styled-components';\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\n\nexport const Main = styled(Formik)`\n  height: 40px;\n  margin-bottom: 16px;\n  color: ${({ theme: { colors } }) => colors.red};\n`;\n\nexport const ContactForm = styled(Form)`\n  display: flex;\n  flex-flow: column;\n  gap: 16px;\n  padding: 20px;\n\n  background-color: ${({ theme: { colors } }) => colors.white};\n  box-shadow: ${({ theme: { shadows } }) => shadows.addBoxShadow};\n`;\n\nexport const LabelForm = styled.label`\n  color: ${({ theme: { colors } }) => colors.black};\n  margin: 0;\n  margin-bottom: 16px;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.33;\n  letter-spacing: -0.18px;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  margin-top: 10px;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1;\n  letter-spacing: -0.72px;\n  color: red;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  margin-top: 10px;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1;\n  letter-spacing: -0.72px;\n  color: red;\n`;\n\nexport const FieldForm = styled(Field)`\n  display: flex;\n  padding: 10px;\n  border: none;\n  border: 1px solid ${({ theme: { colors } }) => colors.inputGrey};\n  font-size: 16px;\n  border-radius: 4px;\n  background-color: transparent;\n  color: ${({ theme: { colors } }) => colors.black};\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus,\n  &:active {\n    border-color: #1db954;\n    outline: none;\n  }\n`;\n\nexport const Buttons = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  padding: 20px 60px;\n  margin: 0 auto;\n  cursor: pointer;\n  color: ${({ theme: { colors } }) => colors.black};\n  background-color: ${({ theme: { colors } }) => colors.backroundBase};\n  font-family: inherit;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n  border-radius: 40px;\n  border: none;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme: { colors } }) => colors.backroundHighLight};\n  }\n`;\n"],"names":["getRegisterSchema","yup","shape","name","matches","required","email","password","min","getLoginSchema","dispacth","useDispatch","loginSchema","_jsxs","_Fragment","children","_jsx","Main","initialValues","validationSchema","onSubmit","values","_ref","resetForm","console","log","toast","concat","ContactForm","LabelForm","htmlFor","FieldForm","Error","component","Buttons","type","Toaster","styled","Formik","_templateObject","_taggedTemplateLiteral","theme","colors","red","Form","_templateObject2","_ref2","white","_ref3","shadows","addBoxShadow","_templateObject3","_ref4","black","ErrorMsg","ErrorMessage","_templateObject4","_templateObject5","Field","_templateObject6","_ref5","inputGrey","_ref6","_templateObject7","_ref7","_ref8","backroundBase","_ref9","backroundHighLight"],"sourceRoot":""}