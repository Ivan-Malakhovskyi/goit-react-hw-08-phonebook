{"version":3,"file":"static/js/832.7dc79418.chunk.js","mappings":"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","sources":["components/phoneBook/contactForm/contactForm.styled.js","components/pages/Registration.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\n\nexport const Main = styled(Formik)`\n  height: 40px;\n  margin-bottom: 16px;\n  color: ${({ theme: { colors } }) => colors.red};\n`;\n\nexport const ContactForm = styled(Form)`\n  display: flex;\n  flex-flow: column;\n  gap: 16px;\n  padding: 20px;\n\n  background-color: ${({ theme: { colors } }) => colors.white};\n  box-shadow: ${({ theme: { shadows } }) => shadows.addBoxShadow};\n`;\n\nexport const LabelForm = styled.label`\n\ncolor: ${({ theme: { colors } }) => colors.black};\nmargin: 0;\nmargin-bottom: 16px;\nfont-size: 14px;\nfont-style: normal;\nfont-weight: 700;\nline-height: 1.33; \nletter-spacing: -0.18px;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  margin-top: 10px;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1; \n  letter-spacing: -0.72px;\n  color: red;\n`;\n\nexport const FieldForm = styled(Field)`\n  display: flex;\n  padding: 10px;\n  border: none;\n  border: 1px solid ${({theme: {colors}}) => colors.inputGrey};\n  font-size: 16px;\n  border-radius: 4px;\n  background-color: transparent;\n  color: ${({ theme: { colors } }) => colors.black};\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus,\n  &:active {\n    border-color: #1db954;\n    outline: none;\n  }\n`;\n\nexport const Buttons = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  padding: 20px 60px;\n  margin: 0 auto;\n  cursor: pointer;\n  color: ${({ theme: { colors } }) => colors.black};\n  background-color: ${({ theme: { colors } }) => colors.backroundBase};\n  font-family: inherit;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n  border-radius: 40px;\n  border: none;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme: { colors } }) => colors.backroundHighLight};\n  }\n`;\n","import * as yup from 'yup';\nimport {\n  Main,\n  ContactForm,\n  LabelForm,\n  FieldForm,\n  ErrorMsg,\n  Buttons,\n} from '../phoneBook/contactForm/contactForm.styled';\n// import { useSelector } from 'react-redux';\n// import { selectContacts } from 'redux/selectors';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(/^[a-zA-Zа-яА-Я\\s'-]*$/, 'Name should not contain numbers')\n    .required(),\n  phone: yup\n    .string()\n    .min(5, 'Too short  phone number')\n    .max(12, 'Too long phone number')\n    .matches(\n      /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/,\n      'Invalid phone number format'\n    )\n    .required(),\n  email: yup.string().email('Invalid email format').required(),\n});\n\nconst Registration = () => {\n  const handleSubmit = (values, { resetForm }) => {\n    const {\n      name,\n\n      phone,\n      email,\n    } = values;\n    console.log(name, phone, email);\n    //  if (\n    //    contacts.find(\n    //      contact => contact.name.toLowerCase() === name.toLowerCase()\n    //    )\n    //  ) {\n    //    toast.error(`${name} already exists.`);\n    //    resetForm();\n    //    return;\n    //  }\n\n    // dispatch(addContact({ name, phone }));\n\n    toast.success(`${name} has succesfully added to your phonebook`);\n    resetForm();\n  };\n\n  return (\n    <div>\n      <h1>Registration</h1>\n      <Main\n        initialValues={{ name: '', phone: '', email: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <ContactForm>\n          <LabelForm htmlFor=\"name\">\n            Name\n            <FieldForm\n              type=\"text\"\n              name=\"name\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n            <ErrorMsg name=\"name\" component=\"p\" />\n          </LabelForm>\n\n          <LabelForm htmlFor=\"phone\">\n            Phone\n            <FieldForm type=\"tel\" name=\"phone\" required />\n            <ErrorMsg name=\"phone\" component=\"p\" />\n          </LabelForm>\n\n          <LabelForm htmlFor=\"email\">\n            Email\n            <FieldForm type=\"email\" name=\"email\" required />\n            <ErrorMsg name=\"email\" component=\"p\" />\n          </LabelForm>\n          <Buttons type=\"submit\">Sign up</Buttons>\n          <Toaster />\n        </ContactForm>\n      </Main>\n    </div>\n  );\n};\n\nexport default Registration;\n"],"names":["Main","styled","Formik","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","red","ContactForm","Form","_templateObject2","_ref2","white","_ref3","shadows","addBoxShadow","LabelForm","_templateObject3","_ref4","black","ErrorMsg","ErrorMessage","_templateObject4","FieldForm","Field","_templateObject5","_ref5","inputGrey","_ref6","Buttons","_templateObject6","_ref7","_ref8","backroundBase","_ref9","backroundHighLight","schema","yup","shape","name","matches","required","phone","min","max","email","_jsxs","children","_jsx","initialValues","validationSchema","onSubmit","values","resetForm","console","log","toast","concat","htmlFor","type","title","component","Toaster"],"sourceRoot":""}